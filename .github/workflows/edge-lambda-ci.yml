name: Lambda@Edge CI
on:
  push:
    paths:
      - "edge-lambdas/**"
      - ".github/workflows/edge-lambda-ci.yml"

concurrency:
  group: edge-lambda-ci-${{ github.ref }}
  cancel-in-progress: true

env:
  S3_BUCKET: pleo-product-web-registry

defaults:
  run:
    working-directory: edge-lambdas

jobs:
  test:
    name: Test
    runs-on: [self-hosted, universal]
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
          cache: "yarn"
          cache-dependency-path: edge-lambdas/yarn.lock
      - name: Install Dependencies
        run: yarn --frozen-lockfile
      - name: Run tests
        run: make test

  check-version:
    name: Check Version
    runs-on: [self-hosted, universal]
    outputs:
      upload_uri: ${{ steps.upload-uri.outputs.uri }}
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v2
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
      - name: Get Upload URI
        id: upload-uri
        run: |
          echo "::set-output name=uri::s3://${{ env.S3_BUCKET }}/edge-lambdas/$(jq -r .version package.json)"
      - name: Check if version already exists
        run: |
          (! aws s3 ls ${{ steps.upload-uri.outputs.uri}}) || (echo "::error::You forgot to update he version in package.json" && exit 1)

  upload:
    name: Build & Upload
    runs-on: [self-hosted, universal]
    needs: check-version
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
          cache: "yarn"
          cache-dependency-path: edge-lambdas/yarn.lock
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
      - name: Install Dependencies
        run: yarn --frozen-lockfile
      - name: Build
        run: make
      - name: Upload Files
        if: github.ref == 'refs/heads/main'
        run: |
          aws s3 cp --recursive dist ${{ needs.check-version.outputs.upload_uri }}
